version: '3.8'

services:
  mysqldb:
    image: mysql:8
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_USER=$MYSQLDB_USER
      - MYSQL_PASSWORD=$MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    networks:
      - ts-clean-api
  app:
    depends_on:
      - mysqldb
    build:
      dockerfile: ./docker/app/Dockerfile
      target: dev
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - ./src:/var/app
      - 'dependencies_app:/var/app/node_modules'
    networks:
      - ts-clean-api
    ports:
      - '9001:4000'
    environment:
      - DB_HOST=mysqldb
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - NODE_ENV=development
    command: npm run dev
    stdin_open: true
    tty: true
  redis:
    image: 'redis:alpine'
    ports:
      - "${FORWARD_REDIS_PORT:-16379}:6379"
    volumes:
      - 'redis:/data'
    networks:
      - ts-clean-api
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

volumes:
  db:
  redis:
  dependencies_app:
  dependencies_admin:
networks:
  ts-clean-api:
    driver: bridge
